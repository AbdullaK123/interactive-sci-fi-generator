"""Added support for characters, the world, locations, and changes and relationships among them

Revision ID: fd98a7db566a
Revises: 8766bed7a970
Create Date: 2025-04-04 18:36:31.673598

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
import sqlmodel


# revision identifiers, used by Alembic.
revision: str = 'fd98a7db566a'
down_revision: Union[str, None] = '8766bed7a970'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('characters',
    sa.Column('name', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('description', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('traits', sa.JSON(), nullable=True),
    sa.Column('importance', sa.Float(), nullable=False),
    sa.Column('id', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('story_id', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['story_id'], ['stories.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('locations',
    sa.Column('name', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('description', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('attributes', sa.JSON(), nullable=True),
    sa.Column('id', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('story_id', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['story_id'], ['stories.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('character_changes',
    sa.Column('id', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('character_id', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('section_id', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('change_description', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('previous_traits', sa.JSON(), nullable=True),
    sa.Column('new_traits', sa.JSON(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['character_id'], ['characters.id'], ),
    sa.ForeignKeyConstraint(['section_id'], ['story_sections.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('entity_relationships',
    sa.Column('id', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('source_character_id', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('target_character_id', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('relationship_type', sa.Enum('FRIEND', 'ENEMY', 'ALLY', 'RIVAL', 'FAMILY', 'ROMANTIC', 'PROFESSIONAL', 'UNKNOWN', name='relationshiptype'), nullable=False),
    sa.Column('strength', sa.Float(), nullable=False),
    sa.Column('attributes', sa.JSON(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['source_character_id'], ['characters.id'], ),
    sa.ForeignKeyConstraint(['target_character_id'], ['characters.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('events',
    sa.Column('title', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('description', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('importance', sa.Float(), nullable=False),
    sa.Column('attributes', sa.JSON(), nullable=True),
    sa.Column('id', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('story_id', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('location_id', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('section_id', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['location_id'], ['locations.id'], ),
    sa.ForeignKeyConstraint(['section_id'], ['story_sections.id'], ),
    sa.ForeignKeyConstraint(['story_id'], ['stories.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('location_changes',
    sa.Column('id', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('location_id', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('section_id', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('change_description', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('previous_attributes', sa.JSON(), nullable=True),
    sa.Column('new_attributes', sa.JSON(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['location_id'], ['locations.id'], ),
    sa.ForeignKeyConstraint(['section_id'], ['story_sections.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('event_participants',
    sa.Column('id', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('event_id', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('character_id', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('role', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.ForeignKeyConstraint(['character_id'], ['characters.id'], ),
    sa.ForeignKeyConstraint(['event_id'], ['events.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('relationship_changes',
    sa.Column('id', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('relationship_id', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('section_id', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('change_description', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('previous_type', sa.Enum('FRIEND', 'ENEMY', 'ALLY', 'RIVAL', 'FAMILY', 'ROMANTIC', 'PROFESSIONAL', 'UNKNOWN', name='relationshiptype'), nullable=True),
    sa.Column('new_type', sa.Enum('FRIEND', 'ENEMY', 'ALLY', 'RIVAL', 'FAMILY', 'ROMANTIC', 'PROFESSIONAL', 'UNKNOWN', name='relationshiptype'), nullable=True),
    sa.Column('previous_strength', sa.Float(), nullable=True),
    sa.Column('new_strength', sa.Float(), nullable=True),
    sa.Column('previous_attributes', sa.JSON(), nullable=True),
    sa.Column('new_attributes', sa.JSON(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['relationship_id'], ['entity_relationships.id'], ),
    sa.ForeignKeyConstraint(['section_id'], ['story_sections.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('relationship_changes')
    op.drop_table('event_participants')
    op.drop_table('location_changes')
    op.drop_table('events')
    op.drop_table('entity_relationships')
    op.drop_table('character_changes')
    op.drop_table('locations')
    op.drop_table('characters')
    # ### end Alembic commands ###
